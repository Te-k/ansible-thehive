---

- name: Install common packages
  package: name={{ item }} state=present
  with_items:
    - python-pip
    - unzip
    - git

- name: Install PyCurl
  apt: name=python-pycurl state=present
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'


- name: Install Java for RHEL Dists
  package: name=java-1.8.0-openjdk state=present
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: Add apt repository for openjdk
  apt_repository:
    repo: 'ppa:openjdk-r/ppa'
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Install Java for Ubuntu Dists
  apt: name=openjdk-8-jre-headless state=present update_cache=yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Create thehive group
  group:
    name: thehive
    state: present

- name: Create thehive user
  user:
    name: thehive
    comment: "TheHive Service Account"
    group: thehive

- name: Make sure run directories exist
  file:
    path: /var/run/thehive
    owner: thehive
    state: directory

- name: Get Installer for hive and thehive {{ thehive.version }}
  get_url:
    url: https://dl.bintray.com/cert-bdf/thehive/thehive-{{ thehive.version }}.zip
    dest: "{{ thehive.install_prefix }}/thehive-{{ thehive.version }}.zip"
    mode: 0440

- name: Extract files
  unarchive:
    src: "{{ thehive.install_prefix }}/thehive-{{ thehive.version }}.zip"
    dest: "{{ thehive.install_prefix }}/"
    creates: "{{ thehive.install_prefix }}/thehive-{{ thehive.version }}"
    remote_src: True

- name: chown thehive directory
  file:
    dest: "{{ thehive.install_prefix }}/thehive-{{ thehive.version }}"
    state: directory
    owner: thehive
    group: thehive
    recurse: yes

- name: Make a symlink for TheHive
  file:
    src: "{{ thehive.install_prefix }}/thehive-{{ thehive.version }}"
    dest: "{{ thehive.install_prefix }}/thehive"
    state: link

- name: Make an etc directory for TheHive
  file:
    path: /etc/thehive
    owner: thehive
    group: thehive
    state: directory
    mode: 0770

- name: Copy in systemd init script for TheHive
  template:
    src: 'thehive.service.j2'
    dest: /etc/systemd/system/thehive.service
  notify: reload systemd
  when: ansible_service_mgr == 'systemd'

- name: Copy in upstart init script for TheHive
  template:
    src: 'thehive.conf.j2'
    dest: /etc/init/thehive.conf
  when: ansible_service_mgr == 'upstart'

- name: Copy in sysvinit script for TheHive
  template:
    src: 'thehive.j2'
    dest: /etc/init.d/thehive
  when: ansible_service_mgr == 'sysvinit'

- name: Copy in test config
  template:
    src: 'application.conf.j2'
    dest: '/etc/thehive/application.conf'
  notify: restart thehive


- name: Enable services for systemd
  service: name=thehive state=started enabled=true daemon_reload=yes
  when: ansible_service_mgr == 'systemd'

- name: Enable services for upstart
  service: name=thehive state=started enabled=true
  when: ansible_service_mgr == 'upstart'

- name: Enable services for sysvinit
  service: name=thehive state=started enabled=true
  when: ansible_service_mgr == 'sysvinit'
